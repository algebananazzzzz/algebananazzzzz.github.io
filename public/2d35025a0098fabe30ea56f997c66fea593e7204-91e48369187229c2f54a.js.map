{"version":3,"file":"2d35025a0098fabe30ea56f997c66fea593e7204-91e48369187229c2f54a.js","mappings":"0luBAqBA,MAjBkB,IAAkE,IAAjE,QAAEA,EAAO,SAAEC,GAAW,EAAK,UAAEC,EAAY,EAAC,UAAEC,EAAY,GAAG,EAC1E,MAAMC,EAAMC,EAAQL,GAEpB,OAAO,gCAAE,IAAEC,EACP,qBAAGK,KAAMF,EAAIG,KAAMC,OAAO,QAAQC,UAAU,wJACxC,uBAAKA,UAAS,KAAOP,EAAS,SAASC,EAAaO,QAASN,EAAIO,QAASC,KAAMR,EAAIQ,KAAOR,EAAIQ,KAAO,eAAgBC,OAAQT,EAAIS,SAC7HC,EAAAA,EAAAA,IAAMV,EAAIW,QAGjB,wBAAMN,UAAU,oCACd,uBAAKA,UAAS,KAAOP,EAAS,SAASC,EAAaO,QAASN,EAAIO,QAASC,KAAMR,EAAIQ,KAAOR,EAAIQ,KAAO,eAAgBC,OAAQT,EAAIS,SAC7HC,EAAAA,EAAAA,IAAMV,EAAIW,QAGpB,C,qCCMP,IAtBa,IAA8K,IAA7K,cAAEC,EAAgB,KAAI,UAAEd,EAAY,EAAC,UAAEC,EAAY,EAAC,KAAEc,EAAI,KAAEV,EAAI,QAAEW,EAAO,WAAEC,EAAU,SAAEC,EAAQ,QAAEC,EAAU,OAAM,UAAEC,EAAY,OAAM,OAAEC,EAAS,OAAM,OAAEC,EAAS,MAAM,EACjL,OAAO,gCAAE,IAAEjB,EAAO,qBAAGD,KAAMC,EAAMC,OAAO,SACpC,qBAAGC,UAAS,QAAUc,EAAM,YAAYC,EAAM,KAAuB,IAAlBR,EAAuB,mCAAwD,IAAlBA,EAAuB,mCAAqC,oCAAkC,6BAA6BE,GACtOE,GAAY,uBAAKX,UAAS,KAAOP,EAAS,SAASC,EAAS,eAAgBO,QAASS,EAAYP,KAAMS,EAASR,OAAQS,GACpHF,GAGJH,IAGL,uBAAKR,UAAU,qBACVW,GAAY,uBAAKX,UAAS,KAAOP,EAAS,SAASC,EAAS,eAAgBO,QAASS,EAAYP,KAAMS,EAASR,OAAQS,GACpHF,GAGL,qBAAGX,UAAS,QAAUc,EAAM,YAAYC,EAAM,KAAuB,IAAlBR,EAAuB,mCAAwD,IAAlBA,EAAuB,mCAAqC,oCAAkC,IAAIE,GAC7MD,IAGV,C","sources":["webpack://algebananazzzzz/./src/components/ui/svgs.js","webpack://algebananazzzzz/./src/components/ui/text.js"],"sourcesContent":["import * as React from 'react';\nimport parse from 'html-react-parser';\nimport SvgList from '../../content/svgs.yml'\n\nconst SvgListed = ({ svgName, redirect = false, svgSizeSm = 3, svgSizeMd = 5 }) => {\n    const svg = SvgList[svgName]\n\n    return <> {redirect ?\n        <a href={svg.link} target='blank' className='inline-flex justify-center items-center w-10 h-10 text-center text-gray-600 hover:bg-gray-100 rounded-full dark:text-gray-400 dark:hover:bg-gray-800'>\n            <svg className={`w-${svgSizeSm} md:w-${svgSizeMd}`} viewBox={svg.viewbox} fill={svg.fill ? svg.fill : \"currentColor\"} stroke={svg.stroke}>\n                {parse(svg.path)}\n            </svg>\n        </a>\n        : <span className='text-gray-600 dark:text-gray-400'>\n            <svg className={`w-${svgSizeSm} md:w-${svgSizeMd}`} viewBox={svg.viewbox} fill={svg.fill ? svg.fill : \"currentColor\"} stroke={svg.stroke}>\n                {parse(svg.path)}\n            </svg>\n        </span>}\n    </>\n}\n\nexport default SvgListed","import * as React from 'react';\n\nconst Text = ({ contrastLevel = null, svgSizeSm = 3, svgSizeMd = 5, text, link, classes, svgViewBox, children, svgFill = \"none\", svgStroke = \"none\", sizeSm = \"base\", sizeMd = \"lg\" }) => {\n    return <> {link ? <a href={link} target='blank'>\n        <p className={`text-${sizeSm} md:text-${sizeMd} ${(contrastLevel === 1) ? \"text-gray-900 dark:text-gray-200\" : (contrastLevel === 2) ? \"text-gray-800 dark:text-gray-300\" : \"text-gray-700 dark:text-gray-400\"} inline-flex items-center ${classes}`}>\n            {children && <svg className={`w-${svgSizeSm} md:w-${svgSizeMd} mr-2 h-auto`} viewBox={svgViewBox} fill={svgFill} stroke={svgStroke}>\n                {children}\n            </svg>\n            }\n            {text}\n        </p>\n    </a> :\n        <div className='flex items-center'>\n            {children && <svg className={`w-${svgSizeSm} md:w-${svgSizeMd} mr-2 h-auto`} viewBox={svgViewBox} fill={svgFill} stroke={svgStroke}>\n                {children}\n            </svg>\n            }\n            <p className={`text-${sizeSm} md:text-${sizeMd} ${(contrastLevel === 1) ? \"text-gray-900 dark:text-gray-200\" : (contrastLevel === 2) ? \"text-gray-800 dark:text-gray-300\" : \"text-gray-700 dark:text-gray-400\"} ${classes}`}>\n                {text}\n            </p>\n        </div>}\n    </>\n}\n\nexport default Text"],"names":["svgName","redirect","svgSizeSm","svgSizeMd","svg","SvgList","href","link","target","className","viewBox","viewbox","fill","stroke","parse","path","contrastLevel","text","classes","svgViewBox","children","svgFill","svgStroke","sizeSm","sizeMd"],"sourceRoot":""}